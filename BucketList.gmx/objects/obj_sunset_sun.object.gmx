<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sunset_sun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>startY = y;
fallspeed = 3;
risespeed = -0.5;
image_speed = 0;
vspeed = risespeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed &lt; 0) {
    if (y == 32) {
        room_goto(list);
    }
    if (input_check_pressed(PLAYER.PLAYER1, INPUT.UP)) {
        vspeed = fallspeed;
        image_index = 1;
     }
    if (input_check_pressed(PLAYER.PLAYER1, INPUT.DOWN)) {
        vspeed = fallspeed;
        image_index = 1;
     }     
     if (input_check_pressed(PLAYER.PLAYER1, INPUT.LEFT)) {
        vspeed = fallspeed;
        image_index = 1;
     }     
     if (input_check_pressed(PLAYER.PLAYER1, INPUT.RIGHT)) {
        vspeed = fallspeed;
        image_index = 1;
     }   
     if (input_check_pressed(PLAYER.PLAYER1, INPUT.A)) {
        vspeed = fallspeed;
        image_index = 1;
     }   
     if (input_check_pressed(PLAYER.PLAYER2, INPUT.UP)) {
        vspeed = fallspeed;
        image_index = 1;
     }
     if (input_check_pressed(PLAYER.PLAYER2, INPUT.DOWN)) {
        vspeed = fallspeed;
        image_index = 1;
     }     
     if (input_check_pressed(PLAYER.PLAYER2, INPUT.LEFT)) {
        vspeed = fallspeed;
        image_index = 1;
     }     
     if (input_check_pressed(PLAYER.PLAYER2, INPUT.RIGHT)) {
        vspeed = fallspeed;
        image_index = 1;
     }   
     if (input_check_pressed(PLAYER.PLAYER2, INPUT.A)) {
        vspeed = fallspeed;
        image_index = 1;
     }
}
if (vspeed &gt; 0) {
    if (y &gt;= startY){
        vspeed = risespeed;
        image_index = 0;
    }
}    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
