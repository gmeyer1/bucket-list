<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bikerace_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Variables
vspeed = -3;
accspeed = -1;
decspeed = +0.05;
hsp = 0;
movespeed = 2;

image_speed = 0;

currframe = 1;
finished = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(list);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (finished) {
    // do stuff
} else {
    //Get the player's input
    key_right = input_check(PLAYER.PLAYER2, INPUT.RIGHT);//keyboard_check(vk_right);
    key_left = -input_check(PLAYER.PLAYER2, INPUT.LEFT);//keyboard_check(vk_left);
    key_peddle = input_check_pressed(PLAYER.PLAYER1, INPUT.A);//check for input;
    
    //React to inputs
    //Only react if not staggered
    move = key_left + key_right;
    hsp = movespeed * move;
    //Horizontal Collision
    if (x &gt; room_width)
    {
        if (key_right)
        {
            hsp = 0;
        }
    }
    if (x &lt; 0)
    {
        if (key_left == -1)
        {
        hsp = 0;
        }
    }
        
    x += hsp;
    
    vmove = key_peddle;
    vspeed += (vmove * accspeed) + decspeed;
    if (vspeed &lt; -5)
    {
        vspeed = -5;
    }
    if (vspeed &gt; 0)
    {
        vspeed = 0;
        image_index = 0;
    }
    
    if (view_yview[0] &gt; 0)
        view_yview[0] = y - 170
        
    if (vmove) {
        image_index = currframe;
        if (currframe == 1)
            currframe = 2;
        else
            currframe = 1;
    }
    
    if (instance_place(x, y, obj_bikerace_finish)) {
        finished = true;
        alarm[0] = room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,32</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
